% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MK_ProtConn.R
\name{MK_ProtConn}
\alias{MK_ProtConn}
\title{Protected Connected (ProtConn)}
\usage{
MK_ProtConn(
  nodes,
  region,
  area_unit = "m2",
  distance = list(type = "centroid", resistance = NULL),
  distance_thresholds,
  probability,
  transboundary = NULL,
  transboundary_type = "nodes",
  protconn_bound = FALSE,
  LA = NULL,
  geom_simplify = FALSE,
  delta = FALSE,
  plot = FALSE,
  write = NULL,
  parallel = NULL,
  intern = TRUE
)
}
\arguments{
\item{nodes}{object of class sf, sfc, sfg or SpatialPolygons. The file must have a projected coordinate system.}

\item{region}{object of class sf, sfc, sfg or SpatialPolygons. The file must have a projected coordinate system.}

\item{area_unit}{character. Attribute area units. You can set an area unit, "Makurhini::unit_covert()" compatible unit ("m2", "Dam2, "km2", "ha", "inch2", "foot2", "yard2", "mile2"). Default equal to hectares "m2".}

\item{distance}{list. See \link[Makurhini]{distancefile}. Example, list(type= "centroid", resistance = NULL).}

\item{distance_thresholds}{numeric. Distance or distances thresholds to establish connections (meters). For example, one distance: distance_threshold = 30000; two or more specific distances:
distance_thresholds = c(30000, 50000); sequence distances: distance_thresholds = seq(10000,100000, 10000).}

\item{probability}{numeric. Probability of direct dispersal between nodes, Default, 0.5,
 that is 50 percentage of probability connection. If probability = NULL, then it will be the inverse of the mean dispersal distance
for the species (1/α; Hanski and Ovaskainen 2000).}

\item{transboundary}{numeric. Buffer to select polygons in a second round, their attribute value = 0, see Saura et al. 2017. You can set one transboundary value or one per each threshold distance.}

\item{transboundary_type}{character. Two options: "nodes" or "region". If it is "nodes" the transboundary is built from the limits of the nodes present in the region (default),
if "region" is selected the transboundary is built from the limits of the region.}

\item{protconn_bound}{logical. If TRUE then the fractions ProtUnConn[design] and ProtConn[bound] will be estimated.}

\item{LA}{numeric. Maximum Landscape Attribute.}

\item{geom_simplify}{logical. Slightly simplify the region and nodes geometries.}

\item{delta}{logical. Estimate the contribution of each node to the ProtConn value in the region.}

\item{plot}{logical. Plot the main ProtConn indicators and fractions, default = FALSE.}

\item{write}{character. Output folder including the output file name without extension, e.g., "C:/ProtConn/Protfiles".}

\item{parallel}{numeric. Specify the number of cores to use for parallel processing, default = NULL. Parallelize the function using furrr package and multiprocess
plan when there are more than ONE transboundary.}

\item{intern}{logical. Show the progress of the process, default = TRUE. Sometimes the advance process does not reach 100 percent when operations are carried out very quickly.}
}
\value{
Table with the following ProtConn values: ECA, Prot, ProtConn, ProtUnconn, RelConn, ProtUnConn[design], ProtConn[bound], ProtConn[Prot], ProtConn[Within],
 ProtConn[Contig], ProtConn[Trans], ProtConn[Unprot], ProtConn[Within][land], ProtConn[Contig][land],
 ProtConn[Unprot][land], ProtConn[Trans][land] \cr
\cr
*If plot is not NULL a list is returned with the ProtConn table and a plots.
}
\description{
Estimate Protected Connected (ProtConn) indicator and fractions for one region.
}
\examples{
\dontrun{
library(Makurhini)
library(sf)

data("Protected_areas", package = "Makurhini")
data("regions", package = "Makurhini")
region <- regions[2,]

test <- MK_ProtConn(nodes = Protected_areas, region = region,
                    area_unit = "ha",
                    distance = list(type= "centroid"),
                    distance_thresholds = c(50000, 10000),
                    probability = 0.5, transboundary = 50000,
                    LA = NULL, plot = TRUE, parallel = NULL,
                    protconn_bound=TRUE,
                    delta = TRUE,
                    write = NULL, intern = TRUE)
test

#Least-cost distances using a human foot print of Mexico (WCS-CIESIN, 2005. https://doi.org/10.7927/H4M61H5F)
library(raster)
HFP_Mexico <- raster(system.file("extdata", "HFP_Mexico.tif",
                    package = "Makurhini", mustWork = TRUE))
mask_1 <- as(extent(Protected_areas), 'SpatialPolygons')
crs(mask_1) <- crs(Protected_areas)
mask_1 <- buffer(mask_1, 20000)
HFP_Mexico <- crop(HFP_Mexico, mask_1)
#If least_cost.java is TRUE, then resistance must bee an integer raster (i.e., integer values).
HFP_Mexico <- round(HFP_Mexico)

test2 <- MK_ProtConn(nodes = Protected_areas, region = region,
                    area_unit = "ha",
                    distance = list(type= "least-cost", resistance = HFP_Mexico,
                    least_cost.java = TRUE,
                    cores.java = 4, ram.java = NULL),
                    distance_thresholds = c(50000, 10000),
                    probability = 0.5, transboundary = 50000,
                    LA = NULL, plot = TRUE,
                    write = NULL, intern = FALSE)
test2$d50000
test2$d10000

}
}
\references{
Saura, S., Bastin, L., Battistella, L., Mandrici, A., & Dubois, G. (2017). Protected areas in the world’s ecoregions: How well connected are they? Ecological Indicators, 76, 144–158.
Saura, S., Bertzky, B., Bastin, L., Battistella, L., Mandrici, A., & Dubois, G. (2018). Protected area connectivity: Shortfalls in global targets and country-level priorities. Biological Conservation, 219(October 2017), 53–67.
}
